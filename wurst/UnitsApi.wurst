package UnitsApi

import Abilities
import AbilityObjEditing
import HashList
import HashMap
import Icons
import ObjectIds
import Units


public constant ROUND_COUNT = 10  // Size of spawn swarms.

public constant bounties_map = new HashMap<int, int>()

// Boss ideas:
//     - Flying Thundercat
//     - Juggernaut very slow
//     - Fast Tomcat
//     - ??
public class UnitProps
    int id
    string model
    string name
    real scale_size
    ArmorType armor_type
    bool is_boss
    bool is_night_round
    string icon

    function setup(int id, string model, string icon, string name, int bounty, ArmorType armor_type, real scale_size, bool is_boss, bool is_night_round)
        this.id = id
        this.model = model
        this.icon = icon
        this.name = name
        this.scale_size = scale_size
        this.armor_type = armor_type
        this.is_boss = is_boss
        this.is_night_round = is_night_round

        bounties_map.put(id, bounty)

    construct(int id, string model, string icon, ArmorType armor_type, string name, int bounty)
        setup(id, model, icon, name, bounty, armor_type, .5, false, false)

    construct(int id, string model, string icon, ArmorType armor_type, string name, int bounty, real scale_size, bool is_boss, bool is_night_round)
        setup(id, model, icon, name, bounty, armor_type, scale_size, is_boss, is_night_round)


// (props.is_boss ? ROUND_COUNT : 1) * (8 + i),  // 7 seemed too low.
public constant SHIP_PROPS = new HashList<UnitProps>()..add(
    new UnitProps('wv00', Units.orcishTransportShip,    Icons.bTNOrcishTransport,       ArmorType.Large,     "Dinghy",                 8, .4, false, false),
    new UnitProps('wv01', Units.humanTransportShip1,    Icons.bTNHumanTransport,        ArmorType.Medium,    "Sailor",                 9),
    new UnitProps('wv02', Units.humanDestroyerShip1,    Icons.bTNHumanDestroyer,        ArmorType.Small,     "Interceptor",           10, .5, false, true),
    new UnitProps('wv03', Units.nightElfTransportShip1, Icons.bTNNightElfTransport,     ArmorType.Unarmored, "Crusader",              11),
    new UnitProps('wv04', Units.orcishDestroyerShip1,   Icons.bTNOrcDestroyer,          ArmorType.Fortified, "Sea Punisher",         120, .7, true, false),
    new UnitProps('wv05', Units.undeadDestroyerShip1,   Icons.bTNUndeadDestroyer,       ArmorType.Medium,    "Destroyer",             13),
    new UnitProps('wv06', Units.nightElfBattleship,     Icons.bTNNightElfBattleCruiser, ArmorType.Fortified, "Dominator",             14, .6, false, false),
    new UnitProps('wv07', Units.orcJuggernaught,        Icons.bTNJuggernaut,            ArmorType.Large,     "Juggernaught",          15, .5, false, true),
    new UnitProps('wv08', Units.undeadShipBattleShip,   Icons.bTNUndeadBattleShip,      ArmorType.Medium,    "Overlord",              16),
    new UnitProps('wv09', Units.undeadTransportShip1,   Icons.bTNUndeadTransport,       ArmorType.Small,     "Ghost ship",           170, .7, true, false),
    new UnitProps('wv10', Units.nightElfFishingBoat,    Icons.bTNNightElfFishingBoat,   ArmorType.Unarmored, "Fishing boat",          18),
    new UnitProps('wv11', Units.nightElfDestroyerShip1, Icons.bTNNightElfDestroyer,     ArmorType.Large,     "Battleship",            19),
    new UnitProps('wv12', Units.humanBattleship,        Icons.bTNHumanBattleShip,       ArmorType.Medium,    "Dreadnought",           20, .5, false, true),
    new UnitProps('wv13', Units.warWagon,               Icons.bTNSeigeEngine,           ArmorType.Fortified, "Tank",                  21),
    new UnitProps('wv14', Units.bloodElfWagon,          Icons.bTNBloodElfSupplyWagon,   ArmorType.Unarmored, "Elven treasure wagon", 220, .5, true, false),
    new UnitProps('wv15', Units.obsidianStatue1,        Icons.bTNObsidianStatue,        ArmorType.Small,     "Floating artifact",     23),
    new UnitProps('wv16', Units.undeadAirBarge1,        Icons.bTNUndeadAirBarge,        ArmorType.Medium,    "Yamato",                24),
    new UnitProps('wv17', Units.wisp1,                  Icons.bTNWisp,                  ArmorType.Hero,      "Spirit",                25, 1.,  false, true),
    new UnitProps('wv18', Units.goblinZeppelin,         Icons.bTNGoblinZeppelin,        ArmorType.Small,     "Goblin warship",        26, .75, false, false),
    new UnitProps('wv19', Units.orcishTransportShip,    Icons.bTNOrcishTransport,       ArmorType.Large,     "Agamemnon",            270, .85, true, false)

    // The game must be more interesting before adding more waves...
)

public constant ID_DEFENDER_0 = 'df00'
public constant ID_DEFENDER_1 = 'df01'
public constant ID_DEFENDER_2 = 'df02'
public constant ID_DEFENDER_3 = 'df03'
public constant ID_MELEE_DEF_0 = 'dfm0'
public constant ID_MELEE_DEF_1 = 'dfm1'
public constant ID_MELEE_DEF_2 = 'dfm2'
public constant ID_MELEE_DEF_3 = 'dfm3'
public constant ID_DONOTHING_DEF = 'dfnt'
public constant ID_MAGIC_DEF_0 = 'dmg0'
public constant ID_SIEGE_DEF_0 = 'dsg0'

constant ID_MORTAR_DOT = 'mtdt'
public constant ID_COLSN_CIRCLE = 'clsn'

public constant ID_BARRACKS = 'raxx'

class CollisionCircle extends AbilityDefinitionItemRegenManalesser
    construct(int id)
        super(id)

class BaseShip extends UnitDefinition
    construct(int id, real scale, int ss, int hp, string name, string model, ArmorType armor_type, int armor_amt, bool _is_boss, bool _is_night_round)
        super(id, 'hbot')
        setScalingValue(scale)
        setSpeedBase(ss)
        setArmorType(armor_type)
        setModelFile(model)
        setUnitClassification("")
        setHitPointsMaximumBase(hp)
        setName(name)
        setFoodCost(1)
        // setGoldBountyAwardedBase(bounty - 1)
        // setGoldBountyAwardedNumberofDice(1)
        // setGoldBountyAwardedSidesperDie(1)

        // 7 too small?  15 was pretty good, until they attacked while crossing
        // over.  With collision size 1, I saw a unit attack 3 towers.
        setCollisionSize(0.)

        setAttacksEnabled(0)
        setAttack1AttackType(AttackType.Normal)
        setAttack1Range(250)
        setAttack1TargetsAllowed("ground,structure,debris,air,item,ward")
        setAttack1ProjectileArt(Abilities.cannonTowerMissile)
        setAttack1ProjectileSpeed(800)
        setAttack1CooldownTime(1.5)
        setAttack1DamageBase(499)
        setAttack1DamageNumberofDice(1)
        setAttack1DamageSidesperDie(1)
        setAttack1MaximumNumberofTargets(1)
        setAttack1WeaponType(WeaponType.Missile)
        setSelectionScale(2.)
        setNormalAbilities("")
        setUpgradesUsed("")
        setDefenseBase(armor_amt)
        setGoldCost(0)

public function wave_count() returns int
    return SHIP_PROPS.size()


/// Apply a few conditional transforms, depending on the round properties.
function get_hp(int wave, bool is_boss, bool is_night_round) returns int
    // 90 seemed too high.  85 seemed too high.  80 seemed too high.
    let base_hp = 2 * (75. * 1.15.pow(wave.toReal())).toInt()

    // .8 seemed too high. .7 seemed too high.
    let as_boss = is_boss ? (.65 * ROUND_COUNT * base_hp).toInt() : base_hp

    let as_night_round = is_night_round ? (.9 * as_boss).toInt() : as_boss

    return as_night_round


@compiletime function createShips()
    for i = 0 to (wave_count() - 1)
        let props = SHIP_PROPS.get(i)
        let base_ss = 140 + (props.is_boss ? 0 : 5 * i)
        new BaseShip(
            props.id,
            props.scale_size,
            ((props.is_night_round ? 1.1 : 1.) * base_ss).toInt(),
            get_hp(i, props.is_boss, props.is_night_round),
            props.name,
            props.model,
            props.armor_type,
            1 + (i / 5.).toInt(),
            props.is_boss,
            props.is_night_round
        )


class BaseDefender extends UnitDefinition
    function setup(int upgrades_to, bool for_sale, int baseDamage, int range, int cost, string name, string sound_set, WeaponType wt, string projectileArt, string model, string icon)
        setButtonPositionX(0)
        setButtonPositionY(for_sale ? 1 : 2)
        setAttack1DamageBase(baseDamage)
        setNormalAbilities(commaList(ID_COLSN_CIRCLE))
        setSightRadiusDay(10000)
        setSightRadiusNight(256)
        setAttack1Range(range)
        setModelFile(model)
        setGoldCost(cost)
        setStockMaximum(1)
        setStockReplenishInterval(0)
        setHotkey(for_sale ? "" : "Q")
        setStockStartDelay(0)
        setUpgradesUsed("")
        setBuildTime(1)
        setAcquisitionRange(range.toReal())
        setLumberCost(0)
        setFoodCost(1)
        setName(name)
        setTooltipBasic((for_sale ? "Train " : "Upgrade to ") + name)
        setTooltipExtended(
            "A ranged, mobile defender which can hold position and form a blockade.|n |n" +
            "|cffffcc00Nominal damage:|r " + (baseDamage + 1).toString() + "|n" +
            "|cffffcc00Attack type:|r Piercing"
        )
        setIconGameInterface(icon)
        setCollisionSize(32.) // 31 too small.
        setAttack1CooldownTime(1.25)
        setSelectionScale(.75)
        setAttack1WeaponType(wt)
        setUnitSoundSet(sound_set)
        setAttack1ProjectileArt(projectileArt)
        setUnitsSold(upgrades_to > 0 ? upgrades_to.toRawCode() : "")

    construct(int id, int upgrades_to, bool for_sale, int baseDamage, int range, int cost, string name, string sound_set, WeaponType wt, string projectileArt, string model, string icon)
        super(id, 'nhea')
        setup(upgrades_to, for_sale, baseDamage, range, cost, name, sound_set, wt, projectileArt, model, icon)

    construct(int id, int upgrades_to, bool for_sale, int baseDamage, int range, int cost, string name, string sound_set, string model, string icon)
        super(id, 'nhea')
        setup(upgrades_to, for_sale, baseDamage, range, cost, name, sound_set, WeaponType.Missile, Abilities.arrowMissile1, model, icon)


class BaseMagicDefender extends BaseDefender
    construct(int id, int upgrades_to, bool for_sale, int baseDamage, int range, int cost, string name, string sound_set, AttackType at, WeaponType wt, string projectileArt, string model, string icon)
        super(id, upgrades_to, for_sale, baseDamage, range, cost, name, sound_set, wt, projectileArt, model, icon)
        setAttack1AttackType(at)

        setTooltipExtended(
            "A ranged, mobile defender which can hold position and form a blockade.|n |n" +
            "|cffffcc00Nominal damage:|r " + (baseDamage + 1).toString() + "|n" +
            "|cffffcc00Attack type:|r Magic"
        )
        setAttack1ProjectileArc(.05)
        setAttack1ProjectileSpeed(1200)
        setNormalAbilities(commaList(ID_COLSN_CIRCLE, 'ACbh'))  // Bash (Neutral Hostile 1).
        setAttack1AnimationBackswingPoint(0.4)
        setAttack1AnimationDamagePoint(0.1)


class MortarBonusDot extends AbilityDefinitionVenomSpearsCreep
    construct(int id)
        super(id)
        setIconNormal(Icons.pASBTNHumanArtilleryUpOne)
        setDurationNormal(1, 10.)
        setName("Lead Tips")
        setTooltipNormal(1, "Lead Tips")
        setTooltipNormalExtended(1, "Deals |cffffcc0020|r bonus damage over time on-hit.")


class BaseSiegeDefender extends BaseDefender
    construct(int id, int upgrades_to, bool for_sale, int baseDamage, int range, int cost, string name, string sound_set, AttackType at, WeaponType wt, string projectileArt, string model, string icon)
        super(id, upgrades_to, for_sale, baseDamage, range, cost, name, sound_set, wt, projectileArt, model, icon)
        setAttack1AttackType(at)

        setTooltipExtended(
            "A ranged, mobile defender which can hold position and form a blockade.|n |n" +
            "|cffffcc00Nominal damage:|r " + (baseDamage + 1).toString() + "|n" +
            "|cffffcc00Attack type:|r Siege"
        )
        setAttack1ProjectileArc(.15)
        setAttack1ProjectileSpeed(500)
        setNormalAbilities(commaList(ID_COLSN_CIRCLE, ID_MORTAR_DOT))


class BaseMeleeDefender extends UnitDefinition
    construct(int id, int upgrades_to, bool for_sale, int baseDamage, int cost, string name, string sound_set, string model, string icon)
        super(id, 'hfoo')
        setUnitsSold(upgrades_to > 0 ? upgrades_to.toRawCode() : "")
        setButtonPositionX(0)
        setButtonPositionY(for_sale ? 1 : 2)
        setAttack1DamageBase(baseDamage)
        setNormalAbilities(commaList(ID_COLSN_CIRCLE))
        setSightRadiusDay(10000)
        setSightRadiusNight(256)
        setAttack1Range(100)
        setHotkey(for_sale ? "" : "Q")
        setUpgradesUsed("")
        setModelFile(model)
        setGoldCost(cost)
        setStockMaximum(1)
        setStockReplenishInterval(0)
        setStockStartDelay(0)
        setBuildTime(1)
        setUnitSoundSet(sound_set)
        setAcquisitionRange(100)
        setLumberCost(0)
        setFoodCost(1)
        setName(name)
        setTooltipBasic((for_sale ? "Train " : "Upgrade to ") + name + (for_sale ? "" : " [|cffffcc00Q|r]"))
        setTooltipExtended(
            "A melee, mobile defender which can hold position and form a blockade.|n |n" +
            "|cffffcc00Nominal damage:|r " + (baseDamage + 1).toString() + "|n" +
            "|cffffcc00Attack type:|r Normal"
        )
        setIconGameInterface(icon)
        setCollisionSize(32.) // 31 too small.
        setAttack1CooldownTime(1.25)
        setSelectionScale(.75)

class DoNothingDefender extends BaseMeleeDefender
    construct(int id, int upgrades_to, bool for_sale, int cost, string name, string sound_set, string model, string icon)
        super(id, upgrades_to, for_sale, 0, cost, name, sound_set, model, icon)
        setAttacksEnabled(0)
        setButtonPositionY(for_sale ? 0 : 2)
        setTooltipExtended(
            "A mobile defender which can hold position and form a blockade.|n |n" +
            "|cffcc0000Does not attack.|r "
        )

@compiletime function createDefenders()
    new CollisionCircle(ID_COLSN_CIRCLE)
    new MortarBonusDot(ID_MORTAR_DOT)

    new BaseDefender(ID_DEFENDER_0, ID_DEFENDER_1, true,   10, 400,  50,       "Elven Archer", "Archer", Units.highElfArcher1, Icons.bTNHighElvenArcher)
    new BaseDefender(ID_DEFENDER_1, ID_DEFENDER_2, false,  25, 410, 100 -  50, "Elven Ranger", "Archer", Units.archer, Icons.bTNArcher)
    new BaseDefender(ID_DEFENDER_2, ID_DEFENDER_3, false,  55, 420, 200 - 100, "Dwarven Rifleman", "Rifleman", WeaponType.Instant, Abilities.rifleImpact, Units.rifleman1, Icons.bTNRifleman)
    new BaseDefender(ID_DEFENDER_3, 0,             false, 115, 430, 400 - 200, "Space Marine", "TerranMarine", WeaponType.Instant, Abilities.rifleImpact, Units.marine, Icons.bTNMarine)

    new BaseMeleeDefender(ID_MELEE_DEF_0, ID_MELEE_DEF_1, true,   15,  50,       "Human Footman", "Footman", Units.footman1, Icons.bTNFootman)
    new BaseMeleeDefender(ID_MELEE_DEF_1, ID_MELEE_DEF_2, false,  35, 100 -  50, "Elven Swordsman", "HighElfSwordsman", Units.theCaptain1, Icons.bTNTheCaptain)
    new BaseMeleeDefender(ID_MELEE_DEF_2, ID_MELEE_DEF_3, false,  75, 200 - 100, "Elven Warden", "Assassin", Units.assassin1, Icons.bTNAssassin)
    new BaseMeleeDefender(ID_MELEE_DEF_3, 0,              false, 155, 400 - 200, "Human Cavalry", "Bandit", Units.banditLord1, Icons.bTNBanditLord)

    new DoNothingDefender(ID_DONOTHING_DEF, 0, true,  5, "Human Villager", "VillagerWoman", Units.villagerWoman1, Icons.bTNVillagerWoman)
    new BaseMagicDefender(ID_MAGIC_DEF_0,   0, true, 15, 600, 100, "Elven Stormcaller", "DruidOfTheTalon", AttackType.Magic, WeaponType.Missile, Abilities.farseerMissile, Units.druidoftheTalon, Icons.bTNDruidOfTheTalon)
    new BaseSiegeDefender(ID_SIEGE_DEF_0,   0, true, 30, 450, 200, "Dwarven Mortar team", "MortarTeam", AttackType.Siege, WeaponType.Missile, Abilities.cannonTowerMissile, Units.mortarTeam1, Icons.bTNMortarTeam)

class Barracks extends BuildingDefinition
    construct(int id)
        super(id, 'hbar')
        setFoodProduced(40)
        setUnitsTrained("")
        setSightRadiusDay(10000)
        setSightRadiusNight(256)
        setUnitsSold(
            commaList(
                ID_DONOTHING_DEF,
                ID_DEFENDER_0,
                ID_MELEE_DEF_0,
                ID_MAGIC_DEF_0,
                ID_SIEGE_DEF_0
            )
        )
        setResearchesAvailable("")
        setPlacementRequires("")
        setNormalAbilities("")

@compiletime function createBarracks()
    new Barracks(ID_BARRACKS)
